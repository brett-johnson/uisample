<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>